/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CitizenRole;

import Business.Address.Address;
import Business.EcoSystem;
import Business.Enterprise.ConstructionEnterprise;
import Business.Enterprise.ElectricityEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MonitoringEnterprise;
import Business.Enterprise.WaterEnterprise;
import Business.Network.Network;
import Business.Organization.Municipal.ConstructionOrganization;
import Business.Organization.Municipal.EverSourceElectricityOrganization;
import Business.Organization.Municipal.MonitoringOrganization;
import Business.Organization.Municipal.NationalGridElectricityOrganization;
import Business.Organization.Municipal.WaterOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utility.Validation;
import Business.WorkeQueue.ConstructionWorkRequest;
import Business.WorkeQueue.ElectricityWorkRequest;
import Business.WorkeQueue.WaterSupplyWorkRequest;
import Business.WorkeQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */
public class ProcessCitizienRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;
    /**
     * Creates new form RequestLabTestJPanel
     */
    public ProcessCitizienRequestJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        valueLabel.setText(enterprise.getName());
        serviceProviderComboBox.removeAllItems();
        populateComboBox();
        //System.out.println("---" + account.getEmployee().getAddress().getCity().toString());
        txtCity.setText(userAccount.getEmployee().getAddress().getCity().toString());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        workRequestJButton = new javax.swing.JButton();
        txtMessage = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        WorkRequestTypeComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        txtAddressLine1 = new javax.swing.JTextField();
        txtAddressLine2 = new javax.swing.JTextField();
        txtApartmentNo = new javax.swing.JTextField();
        workRequestCategory = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        serviceProviderComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJButton.setBackground(new java.awt.Color(51, 51, 51));
        workRequestJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        workRequestJButton.setForeground(new java.awt.Color(255, 255, 255));
        workRequestJButton.setText("Submit Request");
        workRequestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workRequestJButtonActionPerformed(evt);
            }
        });
        add(workRequestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 610, -1, 40));

        txtMessage.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMessage.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMessageKeyTyped(evt);
            }
        });
        add(txtMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, 280, 40));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Pictures/1417743630_go-previous-24.png"))); // NOI18N
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 40, 40));

        valueLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 130, 30));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 120, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Message");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 70, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Work Request Type");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 160, 40));

        WorkRequestTypeComboBox.setBackground(new java.awt.Color(51, 51, 51));
        WorkRequestTypeComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        WorkRequestTypeComboBox.setForeground(new java.awt.Color(255, 255, 255));
        WorkRequestTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        WorkRequestTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WorkRequestTypeComboBoxActionPerformed(evt);
            }
        });
        add(WorkRequestTypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 280, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Zip Code");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, 70, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Address Line 1");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 140, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("City");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 450, 40, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Apartment Number");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 500, 150, 40));

        txtZipCode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtZipCode.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeActionPerformed(evt);
            }
        });
        txtZipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyTyped(evt);
            }
        });
        add(txtZipCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 550, 280, 40));

        txtAddressLine1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAddressLine1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        add(txtAddressLine1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, 280, 40));

        txtAddressLine2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAddressLine2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        add(txtAddressLine2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 400, 280, 40));

        txtApartmentNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtApartmentNo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtApartmentNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApartmentNoKeyTyped(evt);
            }
        });
        add(txtApartmentNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, 280, 40));

        workRequestCategory.setBackground(new java.awt.Color(51, 51, 51));
        workRequestCategory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        workRequestCategory.setForeground(new java.awt.Color(255, 255, 255));
        workRequestCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(workRequestCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, 280, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText(" Request Category");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 150, 40));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Service Provider");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 130, 40));

        serviceProviderComboBox.setBackground(new java.awt.Color(51, 51, 51));
        serviceProviderComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        serviceProviderComboBox.setForeground(new java.awt.Color(255, 255, 255));
        serviceProviderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(serviceProviderComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, 280, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("Request Form");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Address Line 2");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, 120, 40));

        txtCity.setEditable(false);
        txtCity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtCity.setEnabled(false);
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, 280, 40));
    }// </editor-fold>//GEN-END:initComponents

    
    private void populateComboBox() {
        WorkRequestTypeComboBox.removeAllItems();
        workRequestCategory.removeAllItems();
        for(WorkRequest.WorkRequestType workRequestType : WorkRequest.WorkRequestType.values()){
            WorkRequestTypeComboBox.addItem(workRequestType.getValue());
        }
         workRequestCategory.addItem("Personal");
         workRequestCategory.addItem("Public");
    }
    private void workRequestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workRequestJButtonActionPerformed
        
        if(!Validation.validateTextFieldsForNonEmpty(txtAddressLine1) || !Validation.validateTextFieldsForNonEmpty(txtApartmentNo)
        || !Validation.validateTextFieldsForNonEmpty(txtMessage) || !Validation.validateTextFieldsForNonEmpty(txtZipCode)
            || txtZipCode.getText().length()!= 5){
            JOptionPane.showMessageDialog(null,"Please do not keep fields empty", "Warning", JOptionPane.INFORMATION_MESSAGE);
        } else {
        WorkRequest workRequest =  null;
       Address address = new Address();
       String message = txtMessage.getText();
       String addressLine1=txtAddressLine1.getText();
       String addressLine2=txtAddressLine2.getText();
       int zip=Integer.parseInt(txtZipCode.getText());
       int aptNumber=Integer.parseInt(txtApartmentNo.getText());
       address.setAddressLine1(addressLine1);
       address.setAddressLine2(addressLine2);
       address.setZipCode(zip);
       address.setApartmentNo(aptNumber);
       
            
        if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.ElectricityWorkRequest.getValue())){
            workRequest =  new ElectricityWorkRequest();
            workRequest.setRequestType(WorkRequest.WorkRequestType.ElectricityWorkRequest.getValue());
        }
        else if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.WaterSupplyWorkRequest.getValue())){
            workRequest =  new WaterSupplyWorkRequest();
            workRequest.setRequestType(WorkRequest.WorkRequestType.WaterSupplyWorkRequest.getValue());
        }
        else if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.ConstructionWorkRequest.getValue())){
            workRequest =  new ConstructionWorkRequest();
            workRequest.setRequestType(WorkRequest.WorkRequestType.ConstructionWorkRequest.getValue());
        }
        
        String category=workRequestCategory.getSelectedItem().toString();
        //if(WorkRequest.WorkRequestType.)
        //ElectricityWorkRequest  electricityWorkRequest = new ElectricityWorkRequest();
        //(WorkRequestTypeComboBox.getse);
        
        workRequest.setMessage(message);
        workRequest.setSender(userAccount);
        workRequest.setStatus("Sent");
        workRequest.setAddress(address);
        workRequest.setCategory(category);
        Date date = new Date();
        
        workRequest.setRequestDate(date);
        //electricityWorkRequest.setQuantity(Integer.parseInt(txtQuantity.getText()));
        Organization org = null;
        if(checkForDuplicateRequest(workRequest)){
             JOptionPane.showMessageDialog(null,"You have Already Submitted Similar Request Which is not completed yet. Kindly Verify Again", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
        for(Network network : business.getNetworkList()){
            if(network.getName().equals(userAccount.getEmployee().getAddress().getCity().toString())){
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                if(workRequest.getCategory().equals("Public")){
                    if(enterprise instanceof MonitoringEnterprise){
                        workRequest.setProviderName(serviceProviderComboBox.getSelectedItem().toString());
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                           if (organization instanceof MonitoringOrganization){
                                org = organization;
                                break;
                            }
                        }
                    }
                }else if(workRequest.getCategory().equals("Personal")){
                    if(workRequest.getRequestType().equals(WorkRequest.WorkRequestType.ElectricityWorkRequest.getValue())){
                        if(serviceProviderComboBox.getSelectedItem()== EverSourceElectricityOrganization.Type.EverSource.getValue()){
                            if(enterprise instanceof ElectricityEnterprise){
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                   if (organization instanceof EverSourceElectricityOrganization){
                                        org = organization;
                                        break;
                                    }
                                }
                            }
                        }else if(serviceProviderComboBox.getSelectedItem().equals(EverSourceElectricityOrganization.Type.NationalGrid.getValue())){
                            if(enterprise instanceof ElectricityEnterprise){
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                   if (organization instanceof NationalGridElectricityOrganization){
                                        org = organization;
                                        break;
                                    }
                                }
                            }
                        }
                    }else if(workRequest.getRequestType().equals(WorkRequest.WorkRequestType.ConstructionWorkRequest.getValue())){
                        if(enterprise instanceof ConstructionEnterprise){
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                   if (organization instanceof ConstructionOrganization){
                                        org = organization;
                                        break;
                                    }
                                }
                            }
                    }else if((workRequest.getRequestType().equals(WorkRequest.WorkRequestType.WaterSupplyWorkRequest.getValue()))){
                        if(enterprise instanceof WaterEnterprise){
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                   if (organization instanceof WaterOrganization){
                                        org = organization;
                                        break;
                                    }
                                }
                            }
                    }
                }
        }
        }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(workRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(workRequest);
            JOptionPane.showMessageDialog(null,"Submitted Request Successfully!", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        
        //JOptionPane.showMessageDialog(null,"Submitted Request Successfully!", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtMessage.setText("");
        txtAddressLine1.setText("");
        txtAddressLine2.setText("");
        txtApartmentNo.setText("");
        txtZipCode.setText("");
        }

    }//GEN-LAST:event_workRequestJButtonActionPerformed
    }
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CitizenWorkAreaJPanel dwjp = (CitizenWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void WorkRequestTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WorkRequestTypeComboBoxActionPerformed
        System.out.println(WorkRequestTypeComboBox.getSelectedItem());
        serviceProviderComboBox.removeAllItems();
        if(WorkRequestTypeComboBox.getSelectedItem()!=null){
        for(Network nw: business.getNetworkList()){
            if(nw.getName().equalsIgnoreCase(userAccount.getEmployee().getAddress().getCity())){
            for(Enterprise entp: nw.getEnterpriseDirectory().getEnterpriseList()){
                if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.ElectricityWorkRequest.getValue()))
                {
                    if(entp.getEnterpriseType().getValue().equals("Electricity")){
                            serviceProviderComboBox.addItem(Organization.Type.EverSource.getValue());
                            serviceProviderComboBox.addItem(Organization.Type.NationalGrid.getValue());
                        
                    }
                }else if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.WaterSupplyWorkRequest.getValue()))
                {
                    if(entp.getEnterpriseType().getValue().equals("Water")){
                        
                            serviceProviderComboBox.addItem(Organization.Type.Water.getValue());
                        
                    }
                }else if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.ConstructionWorkRequest.getValue()))
                {
                    if(entp.getEnterpriseType().getValue().equals("Construction")){
                        
                            serviceProviderComboBox.addItem(Organization.Type.Construction.getValue());
                        
                    }
                }
                
            }
        }
        }
       }
    }//GEN-LAST:event_WorkRequestTypeComboBoxActionPerformed

    private void txtMessageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessageKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isLetter(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMessageKeyTyped

    private void txtApartmentNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApartmentNoKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtApartmentNoKeyTyped

    private void txtZipCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtZipCodeKeyTyped

    private void txtZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeActionPerformed
   private Boolean checkForDuplicateRequest(WorkRequest request){
       
       for(WorkRequest workRequest:userAccount.getWorkQueue().getWorkRequestList()){
           if(!workRequest.getStatus().equalsIgnoreCase("completed") && workRequest.getAddress().getAddressLine1().equals(request.getAddress().getAddressLine1()) && workRequest.getRequestType().equals(request.getRequestType()))
           {
               return true;
           }
       }
       return false;
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox WorkRequestTypeComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox serviceProviderComboBox;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtAddressLine2;
    private javax.swing.JTextField txtApartmentNo;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtZipCode;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JComboBox<String> workRequestCategory;
    private javax.swing.JButton workRequestJButton;
    // End of variables declaration//GEN-END:variables
}
