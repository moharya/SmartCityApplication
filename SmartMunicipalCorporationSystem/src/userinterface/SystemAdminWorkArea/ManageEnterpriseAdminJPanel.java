/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.CitizenEnterprise;
import Business.Enterprise.ConstructionEnterprise;
import Business.Person.Person;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ElectricityEnterprise;
import Business.Enterprise.MonitoringEnterprise;
import Business.Enterprise.WaterEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import Business.Utility.Validation;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amogh
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateNetworkComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox(){
        networkJComboBox.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            networkJComboBox.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        enterpriseJComboBox.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            enterpriseJComboBox.addItem(enterprise);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        contactNumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setAutoCreateRowSorter(true);
        enterpriseJTable.setBackground(new java.awt.Color(204, 204, 204));
        enterpriseJTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        enterpriseJTable.setRowHeight(20);
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 650, 180));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Network");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 70, 30));

        networkJComboBox.setBackground(new java.awt.Color(153, 153, 153));
        networkJComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        networkJComboBox.setForeground(new java.awt.Color(255, 255, 255));
        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 320, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 80, 30));

        usernameJTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        usernameJTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 390, 320, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Enterprise");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, 80, 30));

        enterpriseJComboBox.setBackground(new java.awt.Color(153, 153, 153));
        enterpriseJComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        enterpriseJComboBox.setForeground(new java.awt.Color(255, 255, 255));
        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });
        add(enterpriseJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, 320, 40));

        submitJButton.setBackground(new java.awt.Color(51, 51, 51));
        submitJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 600, 170, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 440, 80, 30));

        nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nameJTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        nameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameJTextFieldKeyTyped(evt);
            }
        });
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 490, 320, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, 50, 30));

        passwordJPasswordField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passwordJPasswordField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, 320, 40));

        backJButton.setBackground(new java.awt.Color(51, 51, 51));
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Pictures/1417743630_go-previous-24.png"))); // NOI18N
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Contact Number");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 540, 130, 30));

        contactNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        contactNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        contactNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactNumberKeyTyped(evt);
            }
        });
        add(contactNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 540, 320, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel7.setText("Manage Enterprise Admin");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 340, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
        
        
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
    
        if(Validation.validateTextFieldsForNonEmpty(usernameJTextField) && Validation.validateTextFieldsForNonEmpty(passwordJPasswordField)
                && Validation.validateTextFieldsForNonEmpty(nameJTextField) && Validation.validateTextFieldsForNonEmpty(contactNumber)
                && contactNumber.getText().length() == 10){
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
        
        
        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();
         if(enterprise instanceof ElectricityEnterprise)
        {  
        ElectricityEnterprise    ent =(ElectricityEnterprise)enterprise;
        Person employee =  ent.getPersonDirectory().createPerson(name, name, null, null, 0, null, contactNumber.getText(),0 );
        
        UserAccount account = ent.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
        }
        
         if(enterprise instanceof CitizenEnterprise)
        {  
        CitizenEnterprise    ent = (CitizenEnterprise)enterprise;
        Person employee =  ent.getPersonDirectory().createPerson(name, name, null, null, 0, null, contactNumber.getText(),0 );
        
        UserAccount account = ent.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
        }
         if(enterprise instanceof MonitoringEnterprise)
        {  
        MonitoringEnterprise monitoringEnterprise =(MonitoringEnterprise)enterprise;
        Person employee =  monitoringEnterprise.getPersonDirectory().createPerson(name, name, null, null, 0, null, contactNumber.getText(),0 );
        
        UserAccount account = monitoringEnterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
        }
         if(enterprise instanceof WaterEnterprise)
        {  
        WaterEnterprise waterEnterprise =(WaterEnterprise)enterprise;
        Person employee =  waterEnterprise.getPersonDirectory().createPerson(name, name, null, null, 0, null, contactNumber.getText(),0 );
        
        UserAccount account = waterEnterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
        }
         if(enterprise instanceof ConstructionEnterprise)
        {  
        ConstructionEnterprise constructionEnterprise =(ConstructionEnterprise)enterprise;
        Person employee =  constructionEnterprise.getPersonDirectory().createPerson(name, name, null, null, 0, null, contactNumber.getText(),0 );
        
        UserAccount account = constructionEnterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
        }
        
        JOptionPane.showMessageDialog(null, "Admin Information Added successfully!");
        usernameJTextField.setText("");
        passwordJPasswordField.setText("");
        nameJTextField.setText("");
        contactNumber.setText("");
        populateTable();
        }
        else{
            JOptionPane.showMessageDialog(null, "Please dont keep any field empty or with improper details!", "Incomplete Input", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
         Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void nameJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameJTextFieldKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isLetter(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE || character == KeyEvent.VK_SPACE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_nameJTextFieldKeyTyped

    private void contactNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactNumberKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_contactNumberKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField contactNumber;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
